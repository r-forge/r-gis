import(Rcpp)
import(raster)
importFrom(grDevices, topo.colors)
exportMethods("[", "[[", "==", "!=", "!", adjacent, aggregate, app, area, Arith, as.contour, as.lines, as.points, as.polygons, as.array, as.data.frame, as.factor, as.matrix, atan2, bbox, boundaries, buffer, clamp, classify, cellFromXY, cellFromRowCol, cellFromRowColCombine, click, collapse, colFromX, colFromCell, Compare, contour, couldBeLonLat, cover, crop, crs, "crs<-", density, disaggregate, distance, extend, extract, flip, focal, freq, geom, hasValues, hist, head, ifel, init, interpolate, image, isLonLat, isGlobalLonLat, is.factor, lapp, levels, lines, mask, Math, mean, merge, modal, ncell, ncol, "ncol<-", nrow, "nrow<-", pack, pairs, perimeter, persp, plot, plotRGB, predict, project, points, quantile, rasterize, readStart, readStop, res, "res<-", resample, rotate, rowFromY, rowColFromCell, rowFromCell, select, setMinMax, shift, spatSample, stdev, summary, Summary, subset, t, tail, tapp, text, trim, unique, vect, values, "values<-", which.min, which.max, writeRaster, writeStart, writeStop, writeVector, writeValues, xmin, xmax, xres, xFromCol, xyFromCell, xFromCell, ymin, ymax, yres, yFromCell, yFromRow, zonal, zoom, "xmin<-", "xmax<-", "ymin<-", "ymax<-")
exportPattern("^[[:alpha:]]+")
useDynLib(terra, .registration=TRUE)
